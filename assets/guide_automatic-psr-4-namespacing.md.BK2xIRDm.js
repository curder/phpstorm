import{_ as s,c as a,o as e,a2 as i}from"./chunks/framework.T1JhP7-b.js";const n="/phpstorm/assets/psr-4-autoloader-setting.BME86Cs9.png",m=JSON.parse('{"title":"自动 PSR-4 命名空间","description":"","frontmatter":{},"headers":[],"relativePath":"guide/automatic-psr-4-namespacing.md","filePath":"guide/automatic-psr-4-namespacing.md","lastUpdated":1662433373000}'),t={name:"guide/automatic-psr-4-namespacing.md"},p=i(`<h1 id="自动-psr-4-命名空间" tabindex="-1">自动 PSR-4 命名空间 <a class="header-anchor" href="#自动-psr-4-命名空间" aria-label="Permalink to &quot;自动 PSR-4 命名空间&quot;">​</a></h1><p>现代PHP项目基本都使用 <code>PSR-4</code> 自动加载规范，可以在 PhpStorm 中简单配置即可实现。</p><p>在 PhpStorm 中，可以通过配置实现根命名空间与指定目录的映射，进而在创建 PHP 类时通过 <code>PSR-4</code> 自动载入标准，根据类所在的目录路径生成对应的命名空间。</p><h2 id="psr-4" tabindex="-1">PSR-4 <a class="header-anchor" href="#psr-4" aria-label="Permalink to &quot;PSR-4&quot;">​</a></h2><p>在 Laravel 项目中，通过 <code>composer.json</code> 文件进行命名空间和目录的映射关系配置：</p><ul><li><code>App\\\\</code> 命名空间对应的是根目录下的 <code>app/</code> 子目录</li><li><code>Database\\\\Factories\\\\</code> 命名灵就按对应的是跟目录下的 <code>database/factories/</code> 子目录</li><li><code>Database\\\\Seeders\\\\</code> 命名灵就按对应的是跟目录下的 <code>database/seeders/</code> 子目录</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;autoload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;psr-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;App\\\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;Database\\\\Factories\\\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;database/factories/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;Database\\\\Seeders\\\\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;database/seeders/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在 PhpStorm ，还可以通过 <code>Preferences</code> -&gt; <code>Directories</code> 进行配置。</p><p>具体操作如下：</p><ol><li>使用快捷键 <code>⌘ + ,</code> ，进入到系统偏好设置并选择 <code>Directories</code></li><li>选中要操作的目标文件所在目录（这里以 <code>app</code> 为例），将其添加到 <code>Sources</code></li><li>在右侧来到上一步选中的目录并点击编辑图标</li><li>在弹出层输入命名空间前缀</li><li>点击 <strong>OK</strong> 保存设置</li></ol><p><img src="`+n+'" alt=""></p><blockquote><p>从图上可知在 Laravel 框架项目中，PhpStorm 默认给其添加了三个 <code>Source Folders</code>。 这样在对应目录有新的类添加时就会自动添加命名空间前缀了。\\</p></blockquote><p>通过这种方式，可以很方便的在 PhpStorm 中修改命名空间并且基于 <code>PSR-4</code> 自动载入标准新建 PHP 类。</p>',13),l=[p];function o(r,c,d,h,k,u){return e(),a("div",null,l)}const g=s(t,[["render",o]]);export{m as __pageData,g as default};
