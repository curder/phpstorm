import{_ as i,c as a,o as n,a4 as p}from"./chunks/framework.B-5gogL2.js";const e="/phpstorm/assets/which-php-cs-fixer-get-bin-path.kUvkxGpE.png",l="/phpstorm/assets/config-php-cs-fixer-integration.Bng9WxV4.png",t="/phpstorm/assets/config-php-cs-fixer-path-step1.CTTMp1S3.png",h="/phpstorm/assets/config-php-cs-fixer-path-step2.DRLjns5b.png",r="/phpstorm/assets/enable-php-cs-fixer-inspection-use-psr12.D3_W_vWg.png",k="/phpstorm/assets/php-cs-fixer-fix-the-whole-file.CH9H_P8f.png",s="/phpstorm/assets/add-new-external-tool-for-php-cs-fixer.CTcGRrmT.png",c="/phpstorm/assets/config-php-cs-fixer-for-external-tool.Cx2IJAbU.png",d="/phpstorm/assets/apply-external-tool-php-cs-fixer.CeWww147.png",o="/phpstorm/assets/run-external-tool-php-cs-fixer.DEZbg45R.png",g="/phpstorm/assets/config-php-cs-fixer-for-external-tool-using-custom-config-file.C9g3ITp7.png",E="/phpstorm/assets/close-output-for-php-cs-fixer.RaYhH7ky.png",D=JSON.parse('{"title":"php-cs-fixer规范代码风格","description":"","frontmatter":{},"headers":[],"relativePath":"guide/php-cs-fixer-processing-code-style.md","filePath":"guide/php-cs-fixer-processing-code-style.md","lastUpdated":1666753306000}'),F={name:"guide/php-cs-fixer-processing-code-style.md"},y=p('<h1 id="php-cs-fixer规范代码风格" tabindex="-1">php-cs-fixer规范代码风格 <a class="header-anchor" href="#php-cs-fixer规范代码风格" aria-label="Permalink to &quot;php-cs-fixer规范代码风格&quot;">​</a></h1><p>PSR-12 是 <a href="https://www.php-fig.org/" target="_blank" rel="noreferrer">PHP-FIG</a> 组织为 PHP 制定的编码风格标准。</p><p>如果要让 PHP 项目遵循 PSR-12 标准，可以通过 <a href="https://packagist.org/packages/friendsofphp/php-cs-fixer" target="_blank" rel="noreferrer">PHP-CS-Fixer</a> 这类的第三方扩展对 PHP 项目代码进行自动检测，可以将这些代码风格检测逻辑放到提交代码到代码仓库的钩子函数中，如果不符合指定编码风格（不限于 PSR-12，还可以是自定义的编码风格等），则拒绝提交代码，这样就可以保证代码仓库中维护的代码都是符合特定编码风格的。</p><p>在 PhpStorm 中，可以通过集成外部安装的这些代码检查工具非常方便的对代码进行自动检测和修复，从而让最终提交到版本库中的代码都是符合特定代码风格的。</p><h2 id="下载-php-cs-fixer" tabindex="-1">下载 php-cs-fixer <a class="header-anchor" href="#下载-php-cs-fixer" aria-label="Permalink to &quot;下载 php-cs-fixer&quot;">​</a></h2><p>建议使用 <a href="https://getcomposer.org/download/" target="_blank" rel="noreferrer">Composer</a> 命令在全局进行安装：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> friendsofphp/php-cs-fixer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通过命令获取 <code>php-cs-fixer</code> 命令的执行路径：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php-cs-fixer</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+e+'" alt=""></p><h2 id="配置-php-cs-fixer" tabindex="-1">配置 php-cs-fixer <a class="header-anchor" href="#配置-php-cs-fixer" aria-label="Permalink to &quot;配置 php-cs-fixer&quot;">​</a></h2><ol><li><p>配置 php-cs-fixer 路径</p><ol><li><p>在 PhpStorm 的 <code>Preferences</code> -&gt; <code>PHP</code> -&gt; <code>Quality Tools</code> 配置界面中，目前还没有配置任何 PHP CS Fixer 路径：</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+l+'" alt=""></p></details></li><li><p>点击上图的 <code>...</code> 新增一个配置，在新增的弹出层输入如下配置：</p><ul><li><ol><li>新增一个PHP配置 2. 在弹出层的下拉选项选择一个PHP版本 3. 点击 <code>OK</code> 确认选择</li></ol><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+t+'" alt=""></p></details></li><li><ol start="2"><li>在新增的PHP配置中将 phpcs 路径提供</li></ol><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+h+'" alt=""></p></details></li><li><ol start="3"><li>点击 OK 保存配置</li></ol></li></ul></li></ol></li><li><p>启用 PHP CS Fixer</p><p>PHP CS Fixer 默认是关闭的，在 PhpStorm 的 <code>Preferences</code> -&gt; <code>Editor</code> -&gt; <code>Inspections</code> 配置界面中，找到右侧 <strong>PHP</strong> | <strong>Quality Tools</strong> | <strong>PHP CS Fixer validation</strong>，并将右侧的 Ruleset 中选择 PSR12 标准。</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+r+`" alt=""></p></details></li></ol><h2 id="修复代码-php-cs-fixer" tabindex="-1">修复代码 php-cs-fixer <a class="header-anchor" href="#修复代码-php-cs-fixer" aria-label="Permalink to &quot;修复代码 php-cs-fixer&quot;">​</a></h2><h3 id="针对单个文件" tabindex="-1">针对单个文件 <a class="header-anchor" href="#针对单个文件" aria-label="Permalink to &quot;针对单个文件&quot;">​</a></h3><p>还是以上面提到的代码风格不正确的文件内容为例：</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App\\Models\\User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\Facades\\Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;welcome&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);}); </span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>代码下面出现波浪线，这意味着 <code>PHP CS Fixer</code> 检查到不符合系统设置编码风格的代码（当前为PSR-12），将光标移动到出现问题的代码位置处，使用快捷键 <code>Option（或 Alt）⌥ + Enter</code>，弹出快捷修复弹出层，选择 <code>PHP CS Fixer: fix the whole file</code>后回车确认</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="`+k+'" alt=""></p></details><h3 id="批量修正" tabindex="-1">批量修正 <a class="header-anchor" href="#批量修正" aria-label="Permalink to &quot;批量修正&quot;">​</a></h3><p>对于整个项目来说，可以在 PhpStorm 中通过配置外部工具来实现批量修正指定目录的代码风格。</p><p>在 <code>Preferences</code> -&gt; <code>Tools</code> -&gt; <code>External Tools</code> 界面点击 <code>+</code> 新建一个外部工具：</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+s+'" alt=""></p></details><p>在弹出窗中输入如下内容：</p><ul><li>Name: <code>PHP CS Fixer</code></li><li>Description: <code>Apply php-cs-fixer to files.</code></li><li>Program: <code>/Users/curder/.composer/vendor/bin/php-cs-fixer</code></li><li>Arguments: <code>fix $FileDir$ --rules=@PSR12</code></li><li>Working directory: <code>$ProjectFileDir$</code></li></ul><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+c+'" alt=""></p></details><p>将这个外部工具命名为 <code>PHP CS Fixer</code>，在 Paragam 输入 <code>php-cs-fixer</code> 所在系统绝对路径，参数中输入修复指令，这里我们指定路径为当前目录，验证规则为 <code>PSR-12</code>，最后点击 <code>OK</code> 保存。</p><p>接下来，就可以在 PhpStorm 的 Project 区域选中某个目录，点击右键，在下拉菜单看到 <code>External Tools</code> -&gt; <code> PHP CS Fixer</code> 选项：</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+d+'" alt=""></p></details><p>点击 PHP CS Fixer 就可以对选中目录进行进行代码检查和修复了，实际上指定的是前面配置的 <code>php-cs-fixer fix</code> 指令，执行结果会输入到 PhpStorm 下方 Run 区域：</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+o+`" alt=""></p></details><p>如果有代码被修正，会列在控制台输出日志中。可以直接在指定目录下执行对应 fix 指令，只不过在 PhpStorm 中通过这种配置外部工具的方式更加直观更加便捷，还可以为这个 PHP CS Fixer 外部工具配置一个快捷键，这样就更加方便。</p><h2 id="自定义风格配置" tabindex="-1">自定义风格配置 <a class="header-anchor" href="#自定义风格配置" aria-label="Permalink to &quot;自定义风格配置&quot;">​</a></h2><p>php-cs-fixer 支持将项目配置保存在项目根目录中的 <code>.php-cs-fixer.dist.php</code> 文件中，而不是使用命令行选项自定义规则和规则集。</p><p>该文件必须返回 <code>PhpCsFixer\\ConfigInterface</code> 的实例，该实例允许您配置需要分析的规则、文件和目录。</p><p>还可以创建 <code>.php-cs-fixer.php</code> 文件，这是将使用的本地配置，而不是项目配置。</p><p>将该文件添加到 <code>.gitignore</code> 忽略。使用 <code>--config</code> 选项，可以指定指向 <code>.php-cs-fixer.php</code> 文件。</p><ul><li><p>在项目根目录下新建自定义规则，并命名为<code>.php-cs-fixer.dist.php</code>，内容如下：</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$finder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Symfony\\Component\\Finder\\Finder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        __DIR__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        __DIR__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/routes&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        __DIR__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/tests&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;*.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;*.blade.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ignoreDotFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ignoreVCS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PhpCsFixer\\Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;@PSR12&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;array_syntax&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;syntax&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;short&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;ordered_imports&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sort_algorithm&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;alpha&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;no_unused_imports&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;not_operator_with_successor_space&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;trailing_comma_in_multiline&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;phpdoc_scalar&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;unary_operator_spaces&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;binary_operator_spaces&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;blank_line_before_statement&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;statements&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;break&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;continue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;declare&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;return&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;throw&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;try&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;phpdoc_single_line_var_spacing&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;phpdoc_var_without_name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;class_attributes_separation&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;elements&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;method&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;one&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;method_argument_space&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;on_multiline&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ensure_fully_multiline&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;keep_multiple_spaces_after_comma&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;single_trait_insert_per_statement&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFinder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($finder);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><blockquote><p>更多代码风格配置可以查看 <a href="https://mlocati.github.io/php-cs-fixer-configurator/" target="_blank" rel="noreferrer">PHP-CS-Fixer配置</a></p></blockquote></li><li><p>重新配置外部工具来实现批量修正指定目录的代码风格 在 <code>Preferences</code> -&gt; <code>Tools</code> -&gt; <code>External Tools</code> 界面点击 <code>+</code> 新建一个外部工具：</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="`+s+'" alt=""></p></details><p>在弹出窗中输入如下内容：</p><ul><li>Name: <code>PHP CS Fixer</code></li><li>Description: <code>Apply php-cs-fixer to files.</code></li><li>Program: <code>/Users/curder/.composer/vendor/bin/php-cs-fixer</code></li><li><strong>Arguments: <code>fix $FileDir$ --config=.php-cs-fixer.dist.php --allow-risky=yes</code></strong></li><li>Working directory: <code>$ProjectFileDir$</code></li></ul><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+g+'" alt=""></p></details><p>将这个外部工具命名为 <code>PHP CS Fixer</code>，在 Paragam 输入 <code>php-cs-fixer</code> 所在系统绝对路径，参数中输入修复自定义配置，这里我们指定路径为当前目录，验证规则为 <code>PSR-12</code>，最后点击 <code>OK</code> 保存。</p></li></ul><h2 id="关闭修复输出" tabindex="-1">关闭修复输出 <a class="header-anchor" href="#关闭修复输出" aria-label="Permalink to &quot;关闭修复输出&quot;">​</a></h2><p>如果不想每次都查看修复后的结果打印，可以在配置工具是将 <code>Advanced Options</code> -&gt; <code>Open console for tool output</code> 关闭即可。</p><details class="details custom-block"><summary>点击切换截图展示与隐藏</summary><p><img src="'+E+'" alt=""></p></details>',40),m=[y];function u(b,C,f,_,x,P){return n(),a("div",null,m)}const A=i(F,[["render",u]]);export{D as __pageData,A as default};
