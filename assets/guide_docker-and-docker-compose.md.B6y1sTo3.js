import{_ as e,c as o,o as r,a2 as c}from"./chunks/framework.zuJLNJjo.js";const t="/phpstorm/assets/phpstorm-docker-settings.B9BOIJnd.png",a="/phpstorm/assets/phpstorm-docker-connected.B-y6d3kV.png",s="/phpstorm/assets/phpstorm-find-and-inspect-image.BT6QOB5b.png",d="/phpstorm/assets/phpstorm-docker-registry-dialog.DzOz36MB.png",p="/phpstorm/assets/phpstorm-docker-pull-image-console.CuzD7rfm.png",i="/phpstorm/assets/phpstorm-docker-pull-image-processing.Bo0p8WB0.png",l="/phpstorm/assets/phpstorm-docker-push-image.BHwcmce6.png",n="/phpstorm/assets/phpstorm-docker-push-dialog.B2yV3W-0.png",C=JSON.parse('{"title":"Docker 和 Docker Compose","description":"","frontmatter":{},"headers":[],"relativePath":"guide/docker-and-docker-compose.md","filePath":"guide/docker-and-docker-compose.md","lastUpdated":1662887511000}'),m={name:"guide/docker-and-docker-compose.md"},k=c('<h1 id="docker-和-docker-compose" tabindex="-1">Docker 和 Docker Compose <a class="header-anchor" href="#docker-和-docker-compose" aria-label="Permalink to &quot;Docker 和 Docker Compose&quot;">​</a></h1><p><a href="https://www.docker.com/what-docker" target="_blank" rel="noreferrer">Docker</a> 使开发人员能够在容器内部署应用程序，以便在与生产环境相同的环境中测试代码。</p><p>PhpStorm 使用 <a href="https://plugins.jetbrains.com/plugin/7724-docker" target="_blank" rel="noreferrer">Docker插件</a> 提供 Docker 支持。</p><p>默认情况下，Docker 插件已下载并启用。如果插件被禁用，在 <code>设置/首选项</code> -&gt; <code>插件</code> 页面的 <code>已安装</code> 选项卡上启用它。</p><h2 id="启用-docker-支持" tabindex="-1">启用 Docker 支持 <a class="header-anchor" href="#启用-docker-支持" aria-label="Permalink to &quot;启用 Docker 支持&quot;">​</a></h2><ol><li>安装并启动 Docker，<a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">点这里查看文档</a></li><li>配置 Docker 守护程序连接设置 <ul><li><p>使用快捷键 <code>Command + ,</code>打开系统偏好设置，选择 <code>Build, Execution, Deployment</code> -&gt; <code>Docker</code></p></li><li><p>点击 <code>+</code> 添加 Docker 配置并指定如何连接到 Docker 守护程序 <img src="'+t+'" alt=""></p></li><li><p>连接到 Docker 守护程序 配置的 Docker 连接会出现在服务工具窗口中（使用快捷键 <code>Command + 8</code>切换显示和隐藏）。 选择 <code>Docker</code> 节点并单击连接按钮，或从上下文菜单中选择连接。 <img src="'+a+'" alt=""> 要编辑 <code>Docker</code> 连接设置，可以选择 <code>Docker</code> 节点并单击工具栏上的编辑配置按钮，或从上下文菜单中选择编辑配置。</p><p>在 Services 工具窗口（使用快捷键 <code>Command + 8</code>）中，可以拉取和推送镜像、创建和运行容器、管理 Docker Compose 服务等。 也可以与其他工具窗口一样，输入镜像或容器的名称以突出显示匹配的项目。 <img src="'+s+'" alt=""></p></li></ul></li></ol><h2 id="镜像管理" tabindex="-1">镜像管理 <a class="header-anchor" href="#镜像管理" aria-label="Permalink to &quot;镜像管理&quot;">​</a></h2><h3 id="配置镜像地址" tabindex="-1">配置镜像地址 <a class="header-anchor" href="#配置镜像地址" aria-label="Permalink to &quot;配置镜像地址&quot;">​</a></h3><ol><li><p>输入快捷键 <code>Command + ,</code> 打开 IDE 设置并选择 <code>Build, Execution, Deployment</code> -&gt; <code>Docker</code> -&gt; <code>Docker Registry</code></p></li><li><p>单击添加按钮以添加 <code>Docker Registry</code> 配置并指定如何连接到注册表。如果指定授权凭证，PhpStorm 将自动检查与注册表的连接，连接成功消息应出现在对话框底部。</p><p><img src="'+d+'" alt=""></p><p>更多 Docker Registry 配置可以<a href="https://www.jetbrains.com/help/phpstorm/settings-docker-registry.html" target="_blank" rel="noreferrer">查看这里</a></p></li></ol><h3 id="从-docker-registry-获取镜像" tabindex="-1">从 Docker Registry 获取镜像 <a class="header-anchor" href="#从-docker-registry-获取镜像" aria-label="Permalink to &quot;从 Docker Registry 获取镜像&quot;">​</a></h3><ol><li><p>在服务工具窗口中，选择图像节点</p></li><li><p>在镜像的控制台下，输入要拉取的图像的名称，例如 <code>curder/laravel-docker</code></p><p><img src="'+p+'" alt=""></p></li><li><p>按 <code>Command + Enter</code> 拉取镜像到本地。</p><p><img src="'+i+'" alt=""></p></li></ol><h3 id="将镜像推送到-docker-registry-仓库" tabindex="-1">将镜像推送到 Docker Registry 仓库 <a class="header-anchor" href="#将镜像推送到-docker-registry-仓库" aria-label="Permalink to &quot;将镜像推送到 Docker Registry 仓库&quot;">​</a></h3><ol><li><p>在服务 <code>Services</code> 工具窗口中（使用快捷键 <code>Command + 8</code>），选择要上传的镜像并单击 <code>push image</code> 按钮或从上下文菜单中选择 <code>push image</code></p><p><img src="'+l+'" alt=""></p></li><li><p>选择 Docker Registry 并指定名称和版本标签（镜像的名称和版本，例如 <code>my-laravel-docker:v2</code>）</p><p><img src="'+n+'" alt=""></p></li><li><p>单击 <code>OK</code> 运行 docker 推送命令</p></li></ol><p>更多镜像和容器相关操作可以查看官方文档，地址：<a href="https://www.jetbrains.com/help/phpstorm/docker.html#run-containers" target="_blank" rel="noreferrer">Docker | PhpStorm</a></p>',14),h=[k];function g(_,D,u,f,b,y){return r(),o("div",null,h)}const P=e(m,[["render",g]]);export{C as __pageData,P as default};
