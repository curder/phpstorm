import{_ as e,c as a,o,a2 as t}from"./chunks/framework.T1JhP7-b.js";const r="/phpstorm/assets/phpstorm-vagrant-add-box.B09Tm80_.png",v=JSON.parse('{"title":"Vagrant","description":"","frontmatter":{},"headers":[],"relativePath":"guide/vagrant.md","filePath":"guide/vagrant.md","lastUpdated":1662891412000}'),c={name:"guide/vagrant.md"},d=t('<h1 id="vagrant" tabindex="-1">Vagrant <a class="header-anchor" href="#vagrant" aria-label="Permalink to &quot;Vagrant&quot;">​</a></h1><p><a href="http://vagrantup.com/" target="_blank" rel="noreferrer">Vagrant</a> 是一个命令行实用程序，用于管理虚拟机的生命周期。</p><p>PhpStorm 提供与 Vagrant 的完全集成，允许配置 Vagrant 虚拟环境，控制虚拟机的行为，并在项目中执行 Vagrant 命令。</p><p>在使用 Vagrant 的情况下，将满足以下定义：</p><ul><li><code>Vagrantfile</code>：定义 Vagrant 环境的主要配置文件，存储虚拟镜像的所有配置，并告诉 Vagrant 如何使用虚拟机。</li><li><code>Virtual box</code>：包含预配置虚拟机的虚拟沙箱。 Vagrant 与不同的虚拟盒子供应商合作，例如 Oracle 的 VirtualBox、VMWare 或 AWS。</li><li><code>Instance</code>: 虚拟机</li></ul><h2 id="先决条件" tabindex="-1">先决条件 <a class="header-anchor" href="#先决条件" aria-label="Permalink to &quot;先决条件&quot;">​</a></h2><ul><li>从 <a href="https://plugins.jetbrains.com/plugin/7379-vagrant" target="_blank" rel="noreferrer">JetBrains repository</a> 下载并开启 <code>Vagrant</code> 插件</li><li>安装 <a href="http://www.vagrantup.com/" target="_blank" rel="noreferrer">Vagrant</a> 和 <a href="https://www.virtualbox.org/" target="_blank" rel="noreferrer">Oracle 的 VirtualBox</a> 应用程序，并分别启动他们。</li></ul><h2 id="初始化-vagrant-文件" tabindex="-1">初始化 Vagrant 文件 <a class="header-anchor" href="#初始化-vagrant-文件" aria-label="Permalink to &quot;初始化 Vagrant 文件&quot;">​</a></h2><p>要开始使用 Vagrant，需要初始化 <code>Vagrantfile</code>，从下面的方式之一即可：</p><ul><li><p>打开终端（<code>⌥ + F12</code>）并运行以下命令：<code>vagrant init</code></p><blockquote><p>这将初始化 <code>Vagrantfile</code> 并默认将其放入项目根文件夹中。</p></blockquote></li><li><p>使用快捷键 <code>Command + Shift + X</code> 将创建初始化文件命令输入 <code>vagrant init</code> 输入即可。</p></li></ul><p>打开生成的 <code>Vagrantfile</code> 文件，会看到已经有一个预定义的配置。</p><p><code>config.vm.box = &quot;base&quot;</code> 行指定将在项目中使用的虚拟框。</p><h2 id="指定虚拟镜像" tabindex="-1">指定虚拟镜像 <a class="header-anchor" href="#指定虚拟镜像" aria-label="Permalink to &quot;指定虚拟镜像&quot;">​</a></h2><p>例如，指定 <code>ubuntu/trusty64</code> 镜像。</p><p>它包含一个基本的 Ubuntu 虚拟机，也可以根据需要指定任何其他虚拟框。</p><p>要查找可用虚拟盒子的列表，请参阅 <a href="https://www.vagrantup.com/vagrant-cloud/boxes/catalog" target="_blank" rel="noreferrer">Vagrant Boxes</a>。</p><p>执行以下操作之一：</p><ul><li><p>打开 Vagrantfile 并将 <code>config.vm.box = &quot;base&quot;</code> 行更改为以下内容：<code>config.vm.box = &quot;ubuntu/trusty64&quot;</code></p></li><li><p>在 设置/首选项 对话框 (<code>⌘ + ,</code>) 中，选择 <code>Tools</code> -&gt; <code>Vagrant</code>。在 Boxes 窗口中单击按钮并指定以下内容：</p><ul><li><p><strong>Box name:</strong> <code>ubuntu/trusty64</code></p></li><li><p><strong>Box URL:</strong> <code>https://app.vagrantup.com/ubuntu/boxes/trusty64</code></p></li></ul><p><img src="'+r+'" alt=""></p></li></ul><p>一旦 Vagrantfile 初始化完成并指定了虚拟框，就可以部署和运行虚拟机了。</p><h2 id="启动实例" tabindex="-1">启动实例 <a class="header-anchor" href="#启动实例" aria-label="Permalink to &quot;启动实例&quot;">​</a></h2><p>执行以下操作之一：</p><ul><li>打开终端（<code>Alt + F12</code>）并运行以下命令：<code>vagrant up</code></li><li>使用快捷键 <code>Command + Shift + X</code> 后输入 <code>vagrant up</code></li><li>从主菜单中，选择 <code>Tools</code> -&gt; <code>Vagrant</code> -&gt; <code>Up</code></li></ul><div class="tip custom-block"><p class="custom-block-title">通过 SSH 连接到正在运行的机器</p><p>启动虚拟机后，它保持在后端运行。</p><p>要通过 SSH 连接到正在运行的机器： 打开终端（<code>Alt + F12</code>）并运行命令：<code>vagrant ssh</code></p></div><h2 id="一些命令" tabindex="-1">一些命令 <a class="header-anchor" href="#一些命令" aria-label="Permalink to &quot;一些命令&quot;">​</a></h2><p>要控制实例，请使用 Vagrant 命令。它们可以从终端 <code>Alt + F12</code> 或主菜单 <code>Tools</code> -&gt; <code>Vagrant</code> 后选择对应命令运行。</p><p>下面仅展示了使用虚拟机的最重要的命令。Vagrant 命令的完整列表，<a href="https://www.vagrantup.com/docs/cli" target="_blank" rel="noreferrer">参阅命令行界面</a>。</p><ul><li><p><code>Suspend</code> 挂起：挂起实例会暂停所有进程并保存虚拟机的当前状态</p><p>在终端中运行 <code>vagrant suspend</code> 或在主菜单中选择 <code>Tools</code> -&gt; <code>vagrant</code> -&gt; <code>Suspend</code></p></li><li><p><code>Resume</code> 恢复：恢复一个实例会启动一个先前挂起的虚拟机 在终端中运行 <code>vagrant resume</code> 或在主菜单中选择 <code>Tools</code> -&gt; <code>vagrant</code> -&gt; <code>Resume</code></p></li><li><p><code>Reload</code> 重新加载：当修改了 Vagrantfile 进行更改并需要重新加载当前虚拟环境及其配置时，需要重新加载实例。 在终端中运行 <code>vagrant reload</code> 或在主菜单中选择 <code>Tools</code> -&gt; <code>vagrant</code> -&gt; <code>Reload</code></p></li><li><p><code>Halt</code> 关闭：关闭实例会停止正在运行的虚拟机 在终端中运行 <code>vagrant halt</code> 或在主菜单中选择 <code>Tools</code> -&gt; <code>vagrant</code> -&gt; <code>Halt</code></p></li><li><p><code>Destroy</code> 销毁：当需要删除与先前创建的环境相关的所有内容时，销毁虚拟机很重要。在创建实例期间提供的所有资源都将被删除 在终端中运行 <code>vagrant destroy</code> 或在主菜单中选择 <code>Tools</code> -&gt; <code>vagrant</code> -&gt; <code>Destroy</code></p></li></ul>',27),l=[d];function n(i,p,g,s,u,h){return o(),a("div",null,l)}const b=e(c,[["render",n]]);export{v as __pageData,b as default};
