import{_ as e,c as s,o,a4 as p}from"./chunks/framework.B-5gogL2.js";const a="/phpstorm/assets/using-composer-executable.Gvz-_UHP.png",i="/phpstorm/assets/fill-composer-infomation.CWZII4GS.png",n="/phpstorm/assets/install-php-dependencies.BIkS11cU.png",r="/phpstorm/assets/add-compose-dependencies-using-manage-dependencies.DvLxFRtF.png",t="/phpstorm/assets/enter-install-package-name-and-update.BLtGcUkf.png",c="/phpstorm/assets/update-php-dependencies.CJdIWBRC.png",v=JSON.parse('{"title":"Composer 依赖","description":"","frontmatter":{},"headers":[],"relativePath":"guide/composer-dependencies.md","filePath":"guide/composer-dependencies.md","lastUpdated":1665554003000}'),d={name:"guide/composer-dependencies.md"},l=p(`<h1 id="composer-依赖" tabindex="-1">Composer 依赖 <a class="header-anchor" href="#composer-依赖" aria-label="Permalink to &quot;Composer 依赖&quot;">​</a></h1><p>在开发中一般会使用命令行终端命令管理 Composer 依赖，也可以使用 PhpStorm 编辑带给我们的编辑体验。</p><p>这里以初始化一个空白的项目为例，简单演示 Composer 在 PhpStorm 编辑器中的使用。</p><p>包括 composer 初始化和扩展包的增删改查操作。</p><h2 id="下载-composer" tabindex="-1">下载 Composer <a class="header-anchor" href="#下载-composer" aria-label="Permalink to &quot;下载 Composer&quot;">​</a></h2><p>首先我们需要安装 composer 到本地，在命令行终端输入如下命令安装</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer-setup.php</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unlink(&#39;composer-setup.php&#39;);&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>通过下面的命令将可执行文件 composer 移动到全局 bin 路径</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer.phar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/composer</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # For Mac Intel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composer.phar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/homebrew/bin/composer</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # For Mac Silicon</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>通过下面的命令验证 composer 是否正确安装（如果有版本信息输出则表示正确安装）</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="composer-初始化" tabindex="-1">Composer 初始化 <a class="header-anchor" href="#composer-初始化" aria-label="Permalink to &quot;Composer 初始化&quot;">​</a></h2><p>使用 PhpStorm 编辑器打开一个空白的目录，在顶部菜单选择 Tools | Composer | 点击 Init Composer...，会弹出 Composer 设置弹出层。</p><p>选择 <code>&#39;composer&#39; executable</code> 后点击 OK。</p><p><img src="`+a+'" alt=""></p><p>依次输入 <code>license</code>、<code>authors.name</code>、<code>name</code>、<code>description</code>、<code>minimum-stability</code>、<code>authors.email</code></p><p><img src="'+i+'" alt=""></p><p>至此初始化 composer 已经完成。</p><h2 id="下载-composer-依赖" tabindex="-1">下载 Composer 依赖 <a class="header-anchor" href="#下载-composer-依赖" aria-label="Permalink to &quot;下载 Composer 依赖&quot;">​</a></h2><p>在编辑器顶部菜单选择 <code>Tools</code> | <code>Composer</code> | 点击 <code>Install</code>，或者直接在打开 <code>composer.json</code> 文件的界面选择 <strong>Install</strong>。</p><p><img src="'+n+'" alt=""></p><p>可以看到当前项目生成了 <code>vendor/</code> 目录和 <code>composer.lock</code> 文件。</p><h2 id="添加-composer-依赖" tabindex="-1">添加 Composer 依赖 <a class="header-anchor" href="#添加-composer-依赖" aria-label="Permalink to &quot;添加 Composer 依赖&quot;">​</a></h2><p>可以在命令行中使用 <code>composer require guzzlehttp/guzzle</code> 命令添加对应的第三方扩展包 <code>guzzlehttp/guzzle</code>。</p><p>如果要使用 PhpStorm 工作流程应该怎么添加它呢？</p><ol><li><p>在主菜单界面选择 <code>Tools</code> -&gt; <code>Composer</code> -&gt; 选择 <code>Manage Dependencies...</code>（或者在打开 <code>composer.json</code> 文件界面点击右上角的 ⚙️ 按钮，选择 <code>Manage Dependencies...</code>） <img src="'+r+'" alt=""></p></li><li><p>在随即打开的 <code>composer.json</code> 文件中输入要安装的软件包名，并点击 <code>Update</code> 安装软件包</p><ol><li>输入需要安装的软件包 <a href="https://github.com/guzzle/guzzle" target="_blank" rel="noreferrer">guzzlehttp/guzzle</a></li><li>确认安装包输入无误后，点击 <code>Update</code> 确认安装</li><li>等待片刻，软件包就安装到本地 <code>vendor/</code> 目录下 <img src="'+t+'" alt=""></li></ol></li></ol><h2 id="更新-composer-依赖" tabindex="-1">更新 Composer 依赖 <a class="header-anchor" href="#更新-composer-依赖" aria-label="Permalink to &quot;更新 Composer 依赖&quot;">​</a></h2><p>在编辑器顶部菜单选择 <code>Tools</code> | <code>Composer</code> | 点击 <code>Update</code>，或者直接在打开 <code>composer.json</code> 文件的界面选择 <strong>Update</strong>。</p><p><img src="'+c+'" alt=""></p><p>可以看到本地生成了 <code>vendor/</code> 目录和 <code>composer.lock</code> 文件。</p><h2 id="删除-composer-依赖" tabindex="-1">删除 Composer 依赖 <a class="header-anchor" href="#删除-composer-依赖" aria-label="Permalink to &quot;删除 Composer 依赖&quot;">​</a></h2><p>打开项目的 <code>composer.json</code> 文件，将需要删除的依赖删除即可（注意保持json文件的完整）。</p><p>然后再更新 Composer 依赖即可。</p>',33),h=[l];function m(k,u,g,b,C,F){return o(),s("div",null,h)}const y=e(d,[["render",m]]);export{v as __pageData,y as default};
